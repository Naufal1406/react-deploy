[{"D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\index.js":"1","D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\App.js":"2","D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\reportWebVitals.js":"3","D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\component\\EventCalender.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":175,"mtime":1614830352191,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":43584,"mtime":1615115281217,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1hgtp8e",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\index.js",[],["20","21"],"D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\App.js",[],"D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\reportWebVitals.js",[],"D:\\BCA IT Intern\\KANTOR\\sqiReact\\sqi-schedule\\src\\component\\EventCalender.js",["22","23"],"import React, {Component} from \"react\";\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport Axios from \"axios\";\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-responsive-dt/js/responsive.dataTables.js\";\r\nimport \"datatables.net-responsive-dt/css/responsive.dataTables.css\";\r\nimport 'datatables.net-buttons/js/buttons.colVis';\r\nimport 'datatables.net-buttons/js/buttons.html5';\r\nimport 'datatables.net-buttons/js/buttons.flash';\r\nimport 'datatables.net-buttons/js/buttons.print';\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport $ from \"jquery\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nclass EventCalender extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            fields : {},\r\n            errors : {},\r\n            schedule : [],\r\n            number : 1,\r\n            fileName : 'SQi Schedule',\r\n            title : [],\r\n            start : [],\r\n            end : [],\r\n            color : [],\r\n            temp : [],\r\n            temporary : []\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(event) {\r\n        this.getSchedule();\r\n    }\r\n\r\n    getSchedule() {\r\n        Axios.get('http://localhost:8001/sqi-schedule/get-schedule')\r\n        .then((response) => {\r\n            const dataSchedule = response.data;\r\n            this.setState({\r\n                schedule : dataSchedule\r\n            });\r\n            // DATATABLE \r\n            // $(function() {\r\n                // Setup - add a text input to each footer cell\r\n                $('.filter').each( function (i) {\r\n                    var title = $('#example thead th').eq( $(this).index() ).text();\r\n                    if(title===\"application\"){\r\n                        $(this).html( '<button type=\"text\" placeholder=\"Search '+title+'\" data-index=\"'+i+'\" />' );\r\n                    } else {\r\n                        $(this).html( '<input type=\"text\" placeholder=\"Search '+title+'\" data-index=\"'+i+'\" />' );\r\n                    }\r\n                    \r\n                } );\r\n            \r\n                // DataTable\r\n                var table = $('#example').DataTable( {\r\n                    scrollY:        \"300px\",\r\n                    scrollX:        true,\r\n                    scrollCollapse: true,\r\n                    paging:         true,\r\n                    fixedColumns:   true,\r\n                    responsive:     true,\r\n                    dom: 'Bfrtip',\r\n                    buttons: [\r\n                                'copy', 'csv', 'excel', 'pdf', 'print'\r\n                            ]\r\n                } );\r\n            \r\n                // Filter event handler\r\n                $( table.table().container() ).on( 'keyup', '.filter input', function () {\r\n                    table\r\n                        .column( $(this).data('index') )\r\n                        .search( this.value )\r\n                        .draw();\r\n                } );\r\n            // })\r\n        });\r\n        \r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n    \r\n        //Task\r\n        if (!fields[\"task\"]) {\r\n          formIsValid = false;\r\n          errors[\"task\"] = \"Task cannot be empty\";\r\n        }\r\n    \r\n        //Application\r\n        if (!fields[\"app\"]) {\r\n          formIsValid = false;\r\n          errors[\"app\"] = \"Application cannot be empty\";\r\n        }\r\n    \r\n        //Application\r\n        if (!fields[\"fromDate\"]) {\r\n            formIsValid = false;\r\n            errors[\"fromDate\"] = \"Cannot be empty\";\r\n          }\r\n        \r\n        //Application\r\n        if (!fields[\"fromTime\"]) {\r\n            formIsValid = false;\r\n            errors[\"fromTime\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        //Application\r\n        if (!fields[\"toDate\"]) {\r\n            formIsValid = false;\r\n            errors[\"toDate\"] = \"Cannot be empty\";\r\n        }\r\n\r\n        //Application\r\n        if (!fields[\"toTime\"]) {\r\n            formIsValid = false;\r\n            errors[\"toTime\"] = \"Cannot be empty\";\r\n        }\r\n    \r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n    getScheduleById = (id) => {\r\n        Axios.get('http://localhost:8001/sqi-schedule/get-scheduleById/' + id)\r\n        .then((response)=>{\r\n            console.log(response.data)\r\n            this.setState({\r\n                id : response.data.id,\r\n                task : response.data.task,\r\n                app : response.data.app,\r\n                fromDate : response.data.fromDate,\r\n                fromTime : response.data.fromTime,\r\n                toDate : response.data.toDate,\r\n                toTime : response.data.toTime,\r\n                color : response.data.color\r\n            });\r\n            \r\n        });\r\n    }\r\n\r\n    deleteSchedule = (id) => {\r\n        Axios.delete('http://localhost:8001/sqi-schedule/delete-schedule/' + id)\r\n        .then((response)=>{\r\n            Swal.fire({\r\n                icon : 'success',\r\n                title : 'Success',\r\n                text : \"Your Task Has Been Deleted\",\r\n                confrimButtonText : \"OK\"\r\n            }).then((result)=>{\r\n                if(result.isConfirmed){\r\n                    window.location.reload();\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    submitTask(e) {\r\n        e.preventDefault();\r\n        const fields = this.state.fields;\r\n        if(this.handleValidation()){\r\n            // $('#addTaskModal').modal('toggel');\r\n\r\n            const schedule = {\r\n                task : fields[\"task\"],\r\n                app : fields[\"app\"][1],\r\n                fromDate : fields[\"fromDate\"],\r\n                toDate : fields[\"toDate\"],\r\n                fromTime : fields[\"fromTime\"],\r\n                toTime :fields[\"toTime\"],\r\n                color : fields[\"app\"][0]\r\n            }\r\n            console.log(schedule);\r\n    \r\n            Axios.post('http://localhost:8001/sqi-schedule/add-schedule', schedule)\r\n            .then((response)=>{\r\n                Swal.fire({\r\n                    icon : 'success',\r\n                    title : 'Success',\r\n                    text : \"Your Task Has Been Added\",\r\n                    confrimButtonText : \"OK\"\r\n                }).then((result)=>{\r\n                    if(result.isConfirmed){\r\n                        window.location.reload();\r\n                    }\r\n                })\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: 'Sorry !',\r\n              text: 'You Must Fill The Requirement !',\r\n              confirmButtonText: `OK`\r\n            }).then((result) => {\r\n                if(result.isConfirmed) {\r\n                }\r\n            })\r\n    \r\n          }\r\n    }\r\n    \r\n    handleUpdateValidation(){\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.task === \"\"){\r\n            formIsValid = false;\r\n            errors[\"task\"] = \"Task cannot be empty\"\r\n        }\r\n\r\n        this.setState({ errors : errors});\r\n        return formIsValid;\r\n    }\r\n    // taskSubmit(event){\r\n    //     const fields = this.state.fields;\r\n    //     const schedule = {\r\n    //         task : fields[\"task\"],\r\n    //         app : fields[\"app\"][1],\r\n    //         fromDate : fields[\"fromDate\"],\r\n    //         toDate : fields[\"toDate\"],\r\n    //         fromTime : fields[\"fromTime\"],\r\n    //         toTime :fields[\"toTime\"],\r\n    //         color : fields[\"app\"][0]\r\n    //     }\r\n    //     console.log(schedule);\r\n\r\n    //     Axios.post('http://localhost:8080/sqi-schedule/add-schedule', schedule)\r\n    //     .then((response)=>{\r\n    //         Swal.fire({\r\n    //             icon : 'success',\r\n    //             title : 'Success',\r\n    //             text : \"Your Task Has Been Added\",\r\n    //             confrimButtonText : \"OK\"\r\n    //         }).then((result)=>{\r\n    //             if(result.isConfirmed){\r\n    //                 window.location.reload();\r\n    //             }\r\n    //         })\r\n    //     });\r\n    // }\r\n\r\n    updateSchedule = (id) => {\r\n        const schedule = {\r\n            task : this.state.task,\r\n            app : this.state.app[1],\r\n            fromDate : this.state.fromDate,\r\n            fromTime : this.state.toTime,\r\n            toDate : this.state.toDate,\r\n            toTime : this.state.toTime,\r\n            color : this.state.app[0]\r\n        }\r\n        console.log(schedule);   \r\n\r\n        if(this.handleUpdateValidation()){\r\n        Axios.put('http://localhost:8001/sqi-schedule/update-schedule/' + id, schedule)\r\n        .then((response)=>{\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Success',\r\n                text: 'Your Data has been Update',\r\n                confirmButtonText: `OK`\r\n              }).then((result) => {\r\n                  if(result.isConfirmed) {\r\n                    window.location.reload();\r\n                  }\r\n              })\r\n            })\r\n        } else {\r\n            Swal.fire({\r\n              icon: 'warning',\r\n              title: 'Sorry !',\r\n              text: 'You Must Fill The Requirement !',\r\n              confirmButtonText: `OK`\r\n            }).then((result) => {\r\n                if(result.isConfirmed) {\r\n                }\r\n            })\r\n    \r\n          }\r\n    }\r\n\r\n    handleUpdateSchedule = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleUpdateApp = (e) => {\r\n        console.log(e);\r\n        this.setState({\r\n            [e.target.name] : e.target.value.split(\",\")\r\n        })\r\n    }\r\n\r\n    handleChange(field, e){\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    handleChangeApp(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value.split(\",\");\r\n        this.setState({ fields });\r\n    }\r\n\r\n    handleEvent = (e) => {\r\n        Axios.get('http://localhost:8001/sqi-schedule/get-schedule')\r\n        .then((response) => {\r\n            const app = e.target.value;\r\n            const dataSchedule = response.data;\r\n\r\n            this.setState({\r\n                temp : dataSchedule\r\n            })\r\n            const temporary = this.state.temp\r\n\r\n            this.setState({\r\n                temporary : temporary\r\n            })\r\n\r\n            let filterEvent = [];\r\n            temporary.map((result)=>{\r\n                if(app === \"CRM Halo\" && result.app === \"CRM Halo\"){\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                    \r\n                }if(app === \"Halo Lite\" && result.app === \"Halo Lite\"){\r\n                    // console.log(\"Halo Lite\")\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                }if(app === \"Halo Apps\" && result.app === \"Halo Apps\"){\r\n                    // console.log(\"Halo Apps\")\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                    console.log(this.state.title)\r\n                }if(app === \"Specta\" && result.app === \"Specta\"){\r\n                    // console.log(\"Specta\")\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                    \r\n                }if(app === \"Telephony\" && result.app === \"Telephony\"){\r\n                    // console.log(\"Telephony\")\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n\r\n                }if(app === \"SOSMED\" && result.app === \"SOSMED\"){\r\n                    \r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                }if(app === \"Chain\" && result.app === \"Chain\"){\r\n                    \r\n\r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                }else if(app === \"MQA\" && result.app === \"MQA\"){\r\n                    \r\n                    filterEvent.push(result);\r\n                    console.log(filterEvent);\r\n\r\n                    this.setState({\r\n                        temporary : filterEvent\r\n                    })\r\n                }if(app === \"All\") {\r\n                    this.setState({\r\n                        temporary : temporary\r\n                    })\r\n                }\r\n            })\r\n            \r\n        })   \r\n    }\r\n\r\n    resetModal = () => {\r\n        let fields = this.state.fields;\r\n        fields[\"task\"] = \"\";\r\n        fields[\"app\"] = \"\";\r\n        fields[\"fromDate\"] = \"\";\r\n        fields[\"fromTime\"] = \"\";\r\n        fields[\"toDate\"] = \"\";\r\n        fields[\"toTime\"] = \"\"\r\n\r\n        let errors= {}\r\n        errors[\"task\"] = \"\";\r\n        errors[\"app\"] = \"\";\r\n        errors[\"fromDate\"] = \"\";\r\n        errors[\"fromTime\"] = \"\";\r\n        errors[\"toDate\"] = \"\";\r\n        errors[\"toTime\"] = \"\"\r\n\r\n        this.setState({\r\n            fields : fields,\r\n            errors : errors\r\n        });\r\n\r\n    }\r\n    render(){\r\n        const { schedule, temporary } = this.state;\r\n        let { number } = this.state;\r\n        return(\r\n            <div className = \"content contentSection\">\r\n                <section className=\"titleSection\">\r\n                    <div className=\"titleWeb\">                       \r\n                        <h3>\r\n                        <span className=\"material-icons\" style={{fontSize : \"40px\"}}>event_available</span>                    \r\n                            SQi Calendar\r\n                        </h3>\r\n\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"contentSection\">\r\n                    {/* Add Task Button */}\r\n                    <button type=\"button\" className=\"btn btn-primary addTask contentSection\" data-bs-toggle=\"modal\" data-bs-target=\"#addTaskModal\">\r\n                    <div><span class=\"material-icons inputTask\" style={{position : \"relative\"}}>assignment</span></div>\r\n                    Add Task\r\n                    </button>\r\n                </section>                                          \r\n\r\n                {/* Modal Add Task  */}\r\n                <section className=\"contentSection\">\r\n                <div className=\"modal fade\" id=\"addTaskModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <span class=\"material-icons inputTask\" style={{marginRight : \"5px\"}}>assignment</span>\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\"> \r\n                                Add Your Task\r\n                            </h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <form role=\"form\"\r\n                        onSubmit={this.submitTask.bind(this)}\r\n                        >\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div>\r\n                                                    <div className=\"task col-sm-6\">\r\n                                                        <label>Your Task</label>\r\n                                                    </div>\r\n                                                    <div className=\"task col-md-12\">\r\n                                                        <input\r\n                                                        name=\"task\"\r\n                                                        className=\"col-md-12\" \r\n                                                        placeholder=\"-- Enter Your Task --\"\r\n                                                        onChange={this.handleChange.bind(this, \"task\")}\r\n                                                        value ={this.state.fields[\"task\"]}\r\n                                                        />\r\n                                                        <span style={{ color: \"red\", fontSize :\"15px\"}}>\r\n                                                            {this.state.errors[\"task\"]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            \r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"application col-sm-6\">\r\n                                                    <label>Your Application</label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <select \r\n                                                    className=\" application col-sm-12\" \r\n                                                    name=\"app\" \r\n                                                    id=\"appItem\"\r\n                                                    onChange={this.handleChangeApp.bind(this, \"app\")}\r\n                                                    value={this.state.fields[\"app\"]}>                                                        \r\n                                                        <option value=\"null\">-- Choose Application --</option>\r\n                                                        <option className=\"selectApp\" id=\"crmHalo\" value=\"#62A1F3,CRM Halo\">CRM Halo</option>\r\n                                                        <option className=\"selectApp\" id=\"haloLite\" value=\"#71E263,Halo Lite\">Halo Lite</option>\r\n                                                        <option className=\"selectApp\" id=\"haloApps\"value=\"#F2F171,Halo Apps\">Halo Apps</option>\r\n                                                        <option className=\"selectApp\" id =\"specta\"value=\"#F8C957,Specta\">Specta</option>\r\n                                                        <option className=\"selectApp\" id=\"telephony\" value=\"#E18FF0,Telephony\">Telephony</option>\r\n                                                        <option className=\"selectApp\" id=\"sosmed\" value=\"#FF66C5,SOSMED\">SOSMED</option>\r\n                                                        <option className=\"selectApp\" id=\"chain\" value=\"#CDBCCF,Chain\">Chain</option>\r\n                                                        <option className=\"selectApp\" id=\"mqa\" value=\"#D8854F,MQA\">MQA</option>\r\n                                                    </select>\r\n                                                    <span style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                           {this.state.errors[\"app\"]}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                    <div className=\"date col-sm-6\">\r\n                                                        <label>From</label>\r\n                                                    </div>\r\n                                                    <div className=\"chooseDate\">\r\n                                                        {/* From Date */}\r\n                                                        <input \r\n                                                        className=\"fromDate col-sm-6\" \r\n                                                        type=\"date\" \r\n                                                        name=\"fromDate\" \r\n                                                        placeholder=\"Start\"\r\n                                                        onChange={this.handleChange.bind(this,\"fromDate\")}\r\n                                                        value={this.state.fields[\"fromDate\"]}/>\r\n                                                        \r\n\r\n                                                        {/* From Time */}\r\n                                                        <input \r\n                                                        type=\"time\"\r\n                                                        className=\"fromTime col-sm-3\"\r\n                                                        name=\"fromTime\"\r\n                                                        onChange={this.handleChange.bind(this,\"fromTime\")}\r\n                                                        value={this.state.fields[\"fromTime\"]}/>\r\n                                                                                                                \r\n                                                    </div>\r\n                                                    <span className=\"col-sm-6\" style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                        {this.state.errors[\"fromDate\"]}\r\n                                                    </span>\r\n                                                    <span className=\"col-sm-3\" style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                            {/* {this.state.errors[\"fromTime\"]} */}\r\n                                                    </span>                                                                                          \r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"date col-sm-6\">\r\n                                                    <label>To</label>\r\n                                                </div>\r\n                                                <div className=\"chooseDate\">\r\n                                                    {/* To Date */}\r\n                                                    <input \r\n                                                    className=\"toDate col-sm-6\" \r\n                                                    type=\"date\" \r\n                                                    name=\"toDate\" \r\n                                                    placeholder=\"Finish\"\r\n                                                    onChange={this.handleChange.bind(this,\"toDate\")}\r\n                                                    value={this.state.fields[\"toDate\"]}/>\r\n                                                    \r\n\r\n\r\n                                                    {/* To Time */}\r\n                                                    <input \r\n                                                        type=\"time\"\r\n                                                        className=\"fromTime col-sm-3\"\r\n                                                        name=\"toTime\"\r\n                                                        onChange={this.handleChange.bind(this,\"toTime\")}\r\n                                                        value={this.state.fields[\"toTime\"]}/>\r\n                                                    \r\n\r\n                                                </div>\r\n                                                <span className=\"col-sm-6\" style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                        {this.state.errors[\"toDate\"]}\r\n                                                </span>\r\n                                                <span className=\"col-sm-3\" style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                        {/* {this.state.errors[\"toTime\"]} */}\r\n                                                </span>\r\n                                                \r\n                                            </div>                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={this.resetModal}>Cancel</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" \r\n                                // onClick={this.taskSubmit.bind(this)}\r\n                                >\r\n                                    Save changes</button>\r\n                            </div>\r\n                        </form> \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            \r\n            {/* Modal Delete */}\r\n            <section className=\"contentSection\">\r\n                <div class=\"modal fade\" id=\"deleteTaskModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Task</h5>\r\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                        Are you sure to delete this event?\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" class=\"btn btn-danger\" onClick={()=> this.deleteSchedule(this.state.id)}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            {/* Modal Edit */}\r\n            <section className=\"contentSection\">\r\n                <div className=\"modal fade\" id=\"updateTaskModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <span class=\"material-icons inputTask\" style={{marginRight : \"5px\"}}>assignment</span>\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Your Task</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div>\r\n                                                    <div className=\"task col-sm-6\">\r\n                                                        <label>Edit Task</label>\r\n                                                    </div>\r\n                                                    <div className=\"task col-md-12\">\r\n                                                        <input\r\n                                                        name=\"task\"\r\n                                                        className=\"col-md-12\" \r\n                                                        placeholder=\"-- Enter Your Task --\"\r\n                                                        onChange={this.handleUpdateSchedule}\r\n                                                        value ={this.state.task}\r\n                                                        />\r\n                                                        <span style={{ color: \"red\", fontSize :\"15px\" }}>\r\n                                                            {this.state.errors[\"task\"]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            \r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"application col-sm-6\">\r\n                                                    <label>Your Application</label>\r\n                                                </div>\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <select \r\n                                                    className=\" application col-sm-12\" \r\n                                                    name=\"app\" \r\n                                                    id=\"appItem\"\r\n                                                    onChange={this.handleUpdateApp}\r\n                                                    value={this.state.app}>\r\n                                                        <option>-- Choose Application --</option>\r\n                                                        <option className=\"selectApp\" value=\"#70B6CB,CRM Halo\">CRM Halo</option>\r\n                                                        <option className=\"selectApp\" value=\"#70CB8C,Halo Lite\">Halo Lite</option>\r\n                                                        <option className=\"selectApp\" value=\"#D3E85C,Halo Apps\">Halo Apps</option>\r\n                                                        <option className=\"selectApp\" value=\"#DE9457,Specta\">Specta</option>\r\n                                                        <option className=\"selectApp\" value=\"#CD89E8,Telephony\">Telephony</option>\r\n                                                        <option className=\"selectApp\" value=\"#F274E2,SOSMED\">SOSMED</option>\r\n                                                        <option className=\"selectApp\" value=\"#86542c,Chain\">Chain</option>\r\n                                                        <option className=\"selectApp\" value=\"#D8854F,MQA\">MQA</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                    <div className=\"date col-sm-6\">\r\n                                                        <label>From</label>\r\n                                                    </div>\r\n                                                    <div className=\"chooseDate\">\r\n                                                        {/* From Date */}\r\n                                                        <input \r\n                                                        className=\"fromDate col-sm-6\" \r\n                                                        type=\"date\" \r\n                                                        name=\"fromDate\" \r\n                                                        placeholder=\"Start\"\r\n                                                        onChange={this.handleUpdateSchedule}\r\n                                                        value={this.state.fromDate}/>\r\n\r\n                                                        {/* From Time */}\r\n                                                        <input \r\n                                                        type=\"time\"\r\n                                                        className=\"fromTime col-sm-3\"\r\n                                                        name=\"fromTime\"\r\n                                                        onChange={this.handleUpdateSchedule}\r\n                                                        value={this.state.fromTime}/>\r\n                                                    </div>                                                                                          \r\n                                            </div>                                \r\n                                        </div>\r\n\r\n                                        <div className=\"col-sm-12\">\r\n                                            <div className=\"form-group\">\r\n                                                <div className=\"date col-sm-6\">\r\n                                                    <label>To</label>\r\n                                                </div>\r\n                                                <div className=\"chooseDate\">\r\n                                                    {/* To Date */}\r\n                                                    <input \r\n                                                    className=\"toDate col-sm-6\" \r\n                                                    type=\"date\" \r\n                                                    name=\"toDate\" \r\n                                                    placeholder=\"Finish\"\r\n                                                    onChange={this.handleUpdateSchedule}\r\n                                                    value={this.state.toDate}/>\r\n\r\n                                                    {/* To Time */}\r\n                                                    <input \r\n                                                        type=\"time\"\r\n                                                        className=\"fromTime col-sm-3\"\r\n                                                        name=\"toTime\"\r\n                                                        onChange={this.handleUpdateSchedule}\r\n                                                        value={this.state.toTime}/>\r\n                                                </div>\r\n                                                \r\n                                            </div>                                \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\" onClick={this.resetModal}>Cancel</button>\r\n                                <button type=\"button\" className=\"btn btn-primary\" onClick={()=> this.updateSchedule(this.state.id)}>Save changes</button>\r\n                            </div>\r\n                        </form> \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"filterSection contentSection\">\r\n                <div className=\"col-lg-12\">\r\n                    <label for=\"calendar_view\">Filter Applications :</label>\r\n                        <div className=\"custom-control custom-checkbox\" data-filter>\r\n                        <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"all\" name=\"apps\" type=\"radio\" value=\"All\" onChange={this.handleEvent}/>All\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"crmhalo\" name=\"apps\" type=\"radio\" value=\"CRM Halo\" onChange={this.handleEvent}/>CRM Halo\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"halolite\" name=\"apps\" type=\"radio\" value=\"Halo Lite\" onChange={this.handleEvent}/>Halo Lite\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"haloapps\" name=\"apps\" type=\"radio\" value=\"Halo Apps\" onChange={this.handleEvent}/>Halo Apps\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"specta\" name=\"apps\" type=\"radio\" value=\"Specta\" onChange={this.handleEvent}/>Specta\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"telephony\" name=\"apps\" type=\"radio\" value=\"Telephony\" onChange={this.handleEvent}/>Telephony\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"sosmed\" name=\"apps\" type=\"radio\" value=\"SOSMED\" onChange={this.handleEvent}/>SOSMED\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"chain\" name=\"apps\" type=\"radio\" value=\"Chain\" onChange={this.handleEvent}/>Chain\r\n                            <label className=\"checkbox-inline filterCalendar\"></label>\r\n                                <input className=\"filterApp\" id=\"mqa\" name=\"apps\" type=\"radio\" value=\"MQA\" onChange={this.handleEvent}/>MQA\r\n                        </div>\r\n                </div>                       \r\n            </section>  \r\n\r\n            \r\n            <section className=\"contentSection\">\r\n                <FullCalendar\r\n                    id=\"calendar\"\r\n                    plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n                    initialView=\"dayGridMonth\"\r\n                    headerToolbar= {{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n                      }}\r\n                    events = {\r\n                        temporary.map((result)=>{\r\n                            return{\r\n                                title : `${result.task} - ${result.app}`,\r\n                                start : `${result.fromDate}T${result.fromTime}`,\r\n                                end : `${result.toDate}T${result.toTime}`,\r\n                                color : result.color,\r\n                                risk : result.app\r\n                            }\r\n                        })  \r\n                    }\r\n                />\r\n                </section>          \r\n               \r\n                <section id=\"dataTables\" className=\"contentSection\">\r\n                    <table \r\n                        id=\"example\"\r\n                        className=\"row-border hover stripe display nowrap\"\r\n                        responsive \r\n                        striped \r\n                        style={{ width : \"100%\", border : \"3px solid #FAF8F7\"}}>\r\n                    <thead>\r\n                        <tr id=\"filtering\">\r\n                            <th className=\"filter\">No.</th>\r\n                            <th className=\"filter\">Application</th>\r\n                            <th className=\"filter\">Task</th>\r\n                            <th className=\"filter\">From Date</th>\r\n                            <th className=\"filter\">To Date</th>\r\n                            <th className=\"filter\">Action</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className=\"header\">No.</th>\r\n                            <th className=\"header\">Application</th>\r\n                            <th className=\"header\">Task</th>\r\n                            <th className=\"header\">From Date</th>\r\n                            <th className=\"header\">To Date</th>\r\n                            <th className=\"header\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>                            \r\n                        {schedule.map((result)=>{\r\n                            return(\r\n                                <tr>\r\n                                    <td className=\"data\">{number++}</td>\r\n                                    <td>{result.app}</td>\r\n                                    <td>{result.task}</td>\r\n                                    <td className=\"data\">\r\n                                        {`${result.fromDate}`}\r\n                                    </td>\r\n                                    <td className=\"data\">\r\n                                        {`${result.toDate}`}\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"actionBtn\">\r\n                                        <button type=\"button\" className=\"btn btn-warning action\" data-bs-toggle=\"modal\" data-bs-target=\"#updateTaskModal\" onClick={()=> this.getScheduleById(result.id)}><span class=\"material-icons\">edit</span></button>\r\n                                        <button type=\"button\" className=\"btn btn-danger action\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteTaskModal\" onClick={()=> this.getScheduleById(result.id)}><span class=\"material-icons\">delete</span></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                    </table>\r\n                </section>\r\n\r\n\r\n               \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EventCalender;\r\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":333,"column":35,"nodeType":"30","messageId":"31","endLine":333,"endColumn":37},{"ruleId":"32","severity":1,"message":"33","line":470,"column":25,"nodeType":"34","endLine":472,"endColumn":26},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]